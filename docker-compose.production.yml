version: '3'
services:
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    depends_on:
      - nginx-proxy
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam:ro
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    restart: always

  nginx-proxy:
    depends_on: ['web']
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
  
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    expose:
      - "3000"
    command: npm run-script run-prod
    ports: []
    working_dir: /home/node/app
    environment:
      - VIRTUAL_HOST=recipes-api.arbee.me
      - VIRTUAL_PORT=3000
      - VIRTUAL_PROTO=https
      - LETSENCRYPT_HOST=recipes-api.arbee.me
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
  database:
    expose:
      - "5432"
    image: postgres:12
    ports: []
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
  search:
    expose:
      - "9200"
    image: elasticsearch:7.6.1
    ports: []
    restart: always
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      xpack.security.enabled: "true"
volumes:
  dbdata:
  esdata:
  vhost:
  html:
  dhparam:
  certs:
